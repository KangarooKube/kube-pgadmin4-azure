name: Build, Scan and Push Multi-arch Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build-and-scan:    
    name: Build and scan per-platform
    runs-on: ${{ matrix.runs_on }}
    environment: Build
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            suffix: amd64
            runs_on: ubuntu-24.04
          - platform: linux/arm64
            suffix: arm64
            runs_on: ubuntu-24.04-arm

    steps:
      - name: Set IMAGE_NAME using bash lowercasing
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      # Get commit hash short
      - name: Get Commit Hash
        id: commit
        uses: prompt/actions-commit-hash@v3

      - name: Create builder
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for ${{ matrix.platform }} and load
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          load: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}-${{ matrix.suffix }}
          secrets: |
            rhsm_user=${{ secrets.RHSM_USER }}
            rhsm_pass=${{ secrets.RHSM_PASS }}
          build-args: |
            PGADMIN_VERSION=9
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan image for CVEs (table)
        uses: anchore/scan-action@v7
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}-${{ matrix.suffix }}
          fail-build: false
          only-fixed: false
          severity-cutoff: medium
          output-format: table
          output-file: grype-results-${{ matrix.suffix }}.table

      - name: Print failed CVEs (table)
        if: always()
        run: cat grype-results-${{ matrix.suffix }}.table || echo "No table file found"

      - name: Scan image for CVEs (SARIF)
        uses: anchore/scan-action@v7
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}-${{ matrix.suffix }}
          fail-build: true
          only-fixed: true
          severity-cutoff: high
          output-format: sarif
          output-file: grype-results-${{ matrix.suffix }}.sarif

      - name: Upload scan results artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: grype-results-${{ matrix.suffix }}.sarif
          path: grype-results-${{ matrix.suffix }}.sarif

  push-manifest:
    name: Push multi-arch manifest (only if scans passed)
    runs-on: ubuntu-latest
    needs: [build-and-scan]
    if: needs.build-and-scan.result == 'success'
    environment: Build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create builder for push
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest for latest and 9 (only on merge to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:9
          sources: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}-amd64
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}-arm64
      - name: Upload each SARIF scan result to Security tab
        if: always()
        run: |
          for sarif in ./scan-results/**/*.sarif; do
            echo "Uploading $sarif"
            gh api \
              --method POST \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/code-scanning/sarifs \
              -F sarif=@$sarif \
              -F commit_sha=${{ github.sha }} \
              -F ref=${{ github.ref }}
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}